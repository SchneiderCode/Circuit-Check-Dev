{"version":3,"sources":["Debugger_Components/Boards/PlaygroundExpress/Board_Overlay.js"],"names":["Board_Overlay","serialCom","deviceData","x","y","width","height","selectedPin","setSelectedPin","selectedSensor","pinPointer","pinColors","A0","A1","A2","A3","A4","A5","D4","D5","D7","name","points","transform","fill","stroke","strokeWidth","viewBox","className","style","cursor","cx","cy","onClick","analog","digital","input","output","r","pwm"],"mappings":"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","file":"static/js/1.89556ad1.chunk.js","sourcesContent":["import React, {} from \"react\";\n//Todo add in a spot for the switch\n//Modify location of overlays\n//Update color selection (pincolors), in the pin circles\nfunction Board_Overlay({serialCom, deviceData, x, y, width, height, selectedPin, setSelectedPin, selectedSensor}) {\n    let pinPointer = <> </>;\n    let pinColors = {A0: \"white\", A1: \"white\", A2: \"white\", A3: \"white\", A4: \"white\", A5: \"white\", D4: \"white\", D5: \"white\", D7: \"white\"}\n    if(selectedSensor === \"Pins\" || selectedSensor === \"LED\" || selectedSensor === \"Button\")\n    {//5 8 16 11 20 19 15 14 13\n      switch(selectedPin.name)\n      {\n          case \"A5\": \n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(-26 -73) rotate(-75 23.25 120)\" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"A5\"] = \"red\";\n            break;\n\n          case \"A4\":  \n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\"translate(-12 -98) rotate(-54 23.25 120)\" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"A4\"] = \"red\";\n            break;\n\n          case \"D4\"://Left Button A\n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(20 -63)\" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"D4\"] = \"red\";\n            break;\n\n          case \"A1\": \n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\"  translate(123 -21.5) rotate(110 23.25 120)\" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"A1\"] = \"red\";\n            break;\n\n          case \"A2\": \n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(124 -73) rotate(75 23.25 120)\" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"A2\"] = \"red\";\n            break;\n\n          case \"A3\": \n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(110 -98.5) rotate(50 23.25 120)\" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"A3\"] = \"red\";\n            break;\n\n          case \"A0\": \n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(109 3) rotate(130 23.25 120)\" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"A0\"] = \"red\";\n            break;\n            \n          case \"D5\"://Right Button B\n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(77.5 -63) \" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"D5\"] = \"red\";\n            break;\n\n          case \"D7\"://Switch \n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(48.75 -33) \" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"D7\"] = \"red\";\n            break;\n\n          case \"D13\"://LED \n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(59 -111.25) rotate(-90 23.25 120) \" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            break;\n      }\n    }\n      return (\n        <>\n          <svg\n            viewBox=\"0 0 144.058 145.025\"\n            height={height}\n            width={width}\n            x={x}\n            y={y}\n            >\n            \n            {/* Ensure the Pin/Sensor Selectors are placed on top of the microcontroller */}\n                {/*Pin Holes */}\n                <circle className=\"clickable_black clickable_1_5\" style={{cursor:\"pointer\"}} cx={21} cy={29} onClick={()=>setSelectedPin({name: \"A4\", analog: \"A4\", digital: \"D3\", input:true, output:true})} r={5} fill={pinColors[\"A4\"]}>\n                  <title>Pin A4</title>\n                </circle>\n                <circle className=\"clickable_black clickable_1_5\" style={{cursor:\"pointer\"}} cx={9.5} cy={49.5} onClick={()=>setSelectedPin({name: \"A5\", analog: \"A5\",digital: \"D2\", input:true, output:true})} r={5} fill={pinColors[\"A5\"]}>\n                  <title>Pin A5</title>\n                </circle>\n                {/*RX & TX Pins are marked out for serial communication */}\n                <circle cx={9.5} cy={96} r={5} style={{cursor:\"not-allowed\"}} fill=\"black\">\n                  <title>Pin A6 - Blocked for Serial</title>\n                </circle>\n                <circle cx={21.5} cy={115.5} r={5} style={{cursor:\"not-allowed\"}} fill=\"black\">\n                  <title>Pin A7 - Blocked for Serial</title>\n                </circle>\n                \n\n                <circle className=\"clickable_black clickable_1_5\" style={{cursor:\"pointer\"}} cx={123} cy={29} onClick={()=>setSelectedPin({name: \"A3\", analog: \"A3\", digital: \"D10\", pwm: \"D10\", input:true, output:true})} r={5} fill={pinColors[\"A3\"]}>\n                  <title>Pin A3</title>\n                </circle>\n                <circle className=\"clickable_black clickable_1_5\" style={{cursor:\"pointer\"}} cx={135} cy={49.5} onClick={()=>setSelectedPin({name: \"A2\", analog: \"A2\", digital: \"D9\", pwm: \"D9\", input:true, output:true})} r={5} fill={pinColors[\"A2\"]}>\n                  <title>Pin A2</title>\n                </circle>\n                <circle className=\"clickable_black clickable_1_5\" style={{cursor:\"pointer\"}} cx={134.5} cy={95} onClick={()=>setSelectedPin({name: \"A1\", analog: \"A1\", digital: \"D6\", pwm: \"D6\", input:true, output:true})} r={5} fill={pinColors[\"A1\"]}>\n                  <title>Pin A1</title>\n                </circle>\n                <circle className=\"clickable_black clickable_1_5\" style={{cursor:\"pointer\"}} cx={123} cy={115} onClick={()=>setSelectedPin({name: \"A0\", analog: \"A0\", digital: \"D12\", input:true, output:true})} r={5} fill={pinColors[\"A0\"]}>\n                  <title>Pin A0</title>\n                </circle>\n                \n\n                {/* Button A*/}\n                <circle className=\"clickable_black clickable_1_5\" style={{cursor: (selectedSensor == \"Pins\" || selectedSensor == \"Button\") ? \"pointer\" : \"default\"}} cx={43.5} cy={69.5} onClick={()=>{if(selectedSensor == \"Pins\" || selectedSensor == \"Button\"){setSelectedPin({name: \"D4\", digital: \"D4\", input:true, output:false})}}} r={6} fill={pinColors[\"D4\"]} stroke=\"black\">\n                  <title>Button A</title>\n                </circle>\n\n                {/* Button B*/}\n                <circle className=\"clickable_black clickable_1_5\" style={{cursor: (selectedSensor == \"Pins\" || selectedSensor == \"Button\") ? \"pointer\" : \"default\"}} cx={100.6} cy={69.5} onClick={()=>{if(selectedSensor == \"Pins\" || selectedSensor == \"Button\"){setSelectedPin({name: \"D5\", digital: \"D5\", input: true, output:false})}}} r={6} fill={pinColors[\"D5\"]} stroke=\"black\">\n                  <title>Button B</title>\n                </circle>\n\n                {/* Switch*/}\n                <rect className=\"clickable_black clickable_1_5\" style={{cursor: (selectedSensor == \"Pins\" || selectedSensor == \"Button\") ? \"pointer\" : \"default\"}} x={67} y={92.5} width={10} height={6.5} onClick={()=>{if(selectedSensor == \"Pins\" || selectedSensor == \"Button\"){setSelectedPin({name: \"D7\", digital: \"D7\", input: true, output: false})}}} fill={pinColors[\"D7\"]} stroke=\"black\">\n                  <title>Switch</title>\n                </rect>\n\n                {pinPointer}\n\n            </svg>\n         </>\n            \n    )\n}\n\nexport default Board_Overlay"],"sourceRoot":""}