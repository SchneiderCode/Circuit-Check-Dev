{"version":3,"sources":["Debugger_Components/Boards/PlaygroundClassic/Board_Overlay.js"],"names":["Board_Overlay","serialCom","deviceData","x","y","width","height","selectedPin","setSelectedPin","selectedSensor","pinPointer","pinColors","D2","D3","D4","D6","D9","D10","D12","D19","D21","digital","points","transform","fill","stroke","strokeWidth","viewBox","className","style","cursor","cx","cy","onClick","name","pwm","input","output","r","analog"],"mappings":"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","file":"static/js/8.277eb378.chunk.js","sourcesContent":["import React, {} from \"react\";\n//Todo add onBoard LED\nfunction Board_Overlay({serialCom, deviceData, x, y, width, height, selectedPin, setSelectedPin, selectedSensor}) {\n    let pinPointer = <> </>;\n    let pinColors = { D2: \"white\", D3: \"white\", D4: \"white\", D6: \"white\", D9: \"white\", D10: \"white\", D12: \"white\", D19: \"white\", D21: \"white\"}\n    if(selectedSensor === \"Pins\" || selectedSensor === \"LED\" || selectedSensor === \"Button\")\n    {//5 8 16 11 20 19 15 14 13\n      switch(selectedPin.digital)\n      {\n       /*   case \"D0\": //Fill color of micro:bit pins: #d4af1c\n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(-25 -21) rotate(-106 23.25 120)\" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"D0\"] = \"red\";\n            break;\n\n          case \"D1\": \n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(-11 4) rotate(-130 23.25 120)\" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"D1\"] = \"red\";\n            break; RX & TX*/\n\n          case \"D2\": \n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(-25 -72.5) rotate(-75 23.25 120)\" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"D2\"] = \"red\";\n            break;\n\n          case \"D3\":  \n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\"translate(-12 -96) rotate(-57 23.25 120)\" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"D3\"] = \"red\";\n            break;\n\n          case \"D4\"://Left Button A\n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(20 -61)\" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"D4\"] = \"red\";\n            break;\n\n          case \"D6\": \n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\"  translate(122 -21) rotate(110 23.25 120)\" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"D6\"] = \"red\";\n            break;\n\n          case \"D9\": \n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(123 -72.5) rotate(75 23.25 120)\" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"D9\"] = \"red\";\n            break;\n\n          case \"D10\": \n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(109 -97) rotate(50 23.25 120)\" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"D10\"] = \"red\";\n            break;\n\n          case \"D12\": \n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(109 3) rotate(130 23.25 120)\" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"D12\"] = \"red\";\n            break;\n            \n          case \"D19\"://Right Button B\n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(78 -61) \" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"D19\"] = \"red\";\n            break;\n\n          case \"D21\"://Switch \n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(48.75 -32.5) \" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            pinColors[\"D21\"] = \"red\";\n            break;\n\n          case \"D13\"://LED \n            pinPointer = <polygon points=\"18.25,115 28.25,115 23.25,125\" transform=\" translate(59 -111.25) rotate(-90 23.25 120) \" fill=\"red\" stroke=\"black\" strokeWidth=\"0.5\"/>\n            break;\n      }\n    }\n      return (\n        <>\n          <svg\n            viewBox=\"0 0 144.058 145.025\"\n            height={height}\n            width={width}\n            x={x}\n            y={y}\n            >\n            \n            {/* Ensure the Pin/Sensor Selectors are placed on top of the microcontroller */}\n                {/*Pin Holes */}\n                <circle className=\"clickable_black clickable_1_5\" style={{cursor:\"pointer\"}} cx={22} cy={31} onClick={()=>setSelectedPin({name: \"#3\", digital: \"D3\", pwm: \"D3\", input:true, output:true})} r={5} fill={pinColors[\"D3\"]}>\n                  <title>Pin #3</title>\n                </circle>\n                <circle className=\"clickable_black clickable_1_5\" style={{cursor:\"pointer\"}} cx={10.5} cy={50.5} onClick={()=>setSelectedPin({name: \"#2\", digital: \"D2\", input:true, output:true})} r={5} fill={pinColors[\"D2\"]}>\n                  <title>Pin #2</title>\n                </circle>\n                {/*RX & TX Pins*/}\n                <circle  cx={10.5} cy={96}  r={5} style={{cursor:\"not-allowed\"}} fill=\"black\">\n                  <title>Pin #0 - Blocked for Serial</title>\n                </circle>\n                <circle  cx={22} cy={116} r={5} style={{cursor:\"not-allowed\"}} fill=\"black\">\n                  <title>Pin #1 - Blocked for Serial</title>\n                </circle>\n                \n\n                <circle className=\"clickable_black clickable_1_5\" style={{cursor:\"pointer\"}} cx={122} cy={31} onClick={()=>setSelectedPin({name: \"#10\", digital: \"D10\", analog: \"A10\", pwm: \"D10\", input:true, output:true})} r={5} fill={pinColors[\"D10\"]}>\n                  <title>Pin #10</title>\n                </circle>\n                <circle className=\"clickable_black clickable_1_5\" style={{cursor:\"pointer\"}} cx={134} cy={50.5} onClick={()=>setSelectedPin({name: \"#9\", digital: \"D9\", analog: \"A9\", pwm: \"D9\", input:true, output:true})} r={5} fill={pinColors[\"D9\"]}>\n                  <title>Pin #9</title>\n                </circle>\n                <circle className=\"clickable_black clickable_1_5\" style={{cursor:\"pointer\"}} cx={134} cy={95} onClick={()=>setSelectedPin({name: \"#6\", digital: \"D6\", analog: \"A7\", pwm: \"D6\", input:true, output:true})} r={5} fill={pinColors[\"D6\"]}>\n                  <title>Pin #6</title>\n                </circle>\n                <circle className=\"clickable_black clickable_1_5\" style={{cursor:\"pointer\"}} cx={122.5} cy={115} onClick={()=>setSelectedPin({name: \"#12\", digital: \"D12\", analog: \"A11\", input:true, output:true})} r={5} fill={pinColors[\"D12\"]}>\n                  <title>Pin #12</title>\n                </circle>\n                \n\n                {/* Button A*/}\n                <circle className=\"clickable_black clickable_1_5\" style={{cursor: (selectedSensor == \"Pins\" || selectedSensor == \"Button\") ? \"pointer\" : \"default\"}} cx={43} cy={71.5} onClick={()=>{if(selectedSensor == \"Pins\" || selectedSensor == \"Button\"){setSelectedPin({name: \"#4\", digital: \"D4\", input:true, output:false})}}} r={6} fill={pinColors[\"D4\"]} stroke=\"black\">\n                  <title>Button A</title>\n                </circle>\n\n                {/* Button B*/}\n                <circle className=\"clickable_black clickable_1_5\" style={{cursor: (selectedSensor == \"Pins\" || selectedSensor == \"Button\") ? \"pointer\" : \"default\"}} cx={101} cy={71.5} onClick={()=>{if(selectedSensor == \"Pins\" || selectedSensor == \"Button\"){setSelectedPin({name: \"#19\", digital: \"D19\", input:true, output:false})}}} r={6} fill={pinColors[\"D19\"]} stroke=\"black\">\n                  <title>Button B</title>\n                </circle>\n\n                {/* Switch*/}\n                <rect className=\"clickable_black clickable_1_5\" style={{cursor: (selectedSensor == \"Pins\" || selectedSensor == \"Button\") ? \"pointer\" : \"default\"}} x={67} y={92.5} width={10} height={6.5} onClick={()=>{if(selectedSensor == \"Pins\" || selectedSensor == \"Button\"){setSelectedPin({name: \"#21\", digital: \"D21\", input: true, output: false})}}} fill={pinColors[\"D21\"]} stroke=\"black\">\n                  <title>Switch</title>\n                </rect>\n\n                {pinPointer}\n            </svg>\n         </>\n            \n    )\n}\n\nexport default Board_Overlay"],"sourceRoot":""}